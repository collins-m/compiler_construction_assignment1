/* Generated By:JavaCC: Do not edit this line. FrontEndConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface FrontEndConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int VAR = 1;
  /** RegularExpression Id. */
  int CONST = 2;
  /** RegularExpression Id. */
  int RETURN = 3;
  /** RegularExpression Id. */
  int BOOLEAN = 4;
  /** RegularExpression Id. */
  int VOID = 5;
  /** RegularExpression Id. */
  int MAIN = 6;
  /** RegularExpression Id. */
  int IF = 7;
  /** RegularExpression Id. */
  int ELSE = 8;
  /** RegularExpression Id. */
  int TRUE = 9;
  /** RegularExpression Id. */
  int FALSE = 10;
  /** RegularExpression Id. */
  int WHILE = 11;
  /** RegularExpression Id. */
  int SKP = 12;
  /** RegularExpression Id. */
  int INTEGER = 13;
  /** RegularExpression Id. */
  int COMMA = 14;
  /** RegularExpression Id. */
  int SEMICOLON = 15;
  /** RegularExpression Id. */
  int COLON = 16;
  /** RegularExpression Id. */
  int ASSIGN = 17;
  /** RegularExpression Id. */
  int LEFT_BRACE = 18;
  /** RegularExpression Id. */
  int RIGHT_BRACE = 19;
  /** RegularExpression Id. */
  int LEFT_PARENTHESIS = 20;
  /** RegularExpression Id. */
  int RIGHT_PARENTHESIS = 21;
  /** RegularExpression Id. */
  int PLUS_SIGN = 22;
  /** RegularExpression Id. */
  int MINUS_SIGN = 23;
  /** RegularExpression Id. */
  int TILDE = 24;
  /** RegularExpression Id. */
  int OR = 25;
  /** RegularExpression Id. */
  int AND = 26;
  /** RegularExpression Id. */
  int EQUIVALENT = 27;
  /** RegularExpression Id. */
  int NOTEQUIVALENT = 28;
  /** RegularExpression Id. */
  int LESS_THAN = 29;
  /** RegularExpression Id. */
  int GREATER_THAN = 30;
  /** RegularExpression Id. */
  int LESS_THAN_EQUAL = 31;
  /** RegularExpression Id. */
  int GREATER_THAN_EQUAL = 32;
  /** RegularExpression Id. */
  int DIGIT = 33;
  /** RegularExpression Id. */
  int CHAR = 34;
  /** RegularExpression Id. */
  int NUMBER = 35;
  /** RegularExpression Id. */
  int ID = 36;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int IN_COMMENT = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"var\"",
    "\"const\"",
    "\"return\"",
    "\"boolean\"",
    "\"void\"",
    "\"main\"",
    "\"if\"",
    "\"else\"",
    "\"true\"",
    "\"false\"",
    "\"while\"",
    "\"skip\"",
    "\"integer\"",
    "\",\"",
    "\";\"",
    "\":\"",
    "\"=\"",
    "\"{\"",
    "\"}\"",
    "\"(\"",
    "\")\"",
    "\"+\"",
    "\"-\"",
    "\"~\"",
    "\"||\"",
    "\"&&\"",
    "\"==\"",
    "\"!=\"",
    "\"<\"",
    "\">\"",
    "\"<=\"",
    "\">=\"",
    "<DIGIT>",
    "<CHAR>",
    "<NUMBER>",
    "<ID>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\f\"",
    "\"\\r\"",
    "<token of kind 42>",
    "\"/*\"",
    "\"/*\"",
    "\"*/\"",
    "<token of kind 46>",
  };

}
